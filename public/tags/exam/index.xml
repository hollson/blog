<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Exam on 码夫庄园</title>
    <link>https://hollson.github.io/tags/exam/</link>
    <description>Recent content in Exam on 码夫庄园</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>版权所有</copyright>
    <lastBuildDate>Wed, 08 May 2019 00:00:00 +0800</lastBuildDate>
    
        <atom:link href="https://hollson.github.io/tags/exam/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kafka面试自测系列1</title>
      <link>https://hollson.github.io/post/1585721646/</link>
      <pubDate>Wed, 08 May 2019 00:00:00 +0800</pubDate>
      
      <guid>https://hollson.github.io/post/1585721646/</guid>
      <description>面试题，不仅是面试指南，更是自我知识检测手段 1.什么是kafka Kafka是分布式发布-订阅消息系统，它最初是由LinkedIn公司开发的，</description>
    </item>
    
    <item>
      <title>Kafka面试自测系列2</title>
      <link>https://hollson.github.io/post/1585721666/</link>
      <pubDate>Wed, 08 May 2019 00:00:00 +0800</pubDate>
      
      <guid>https://hollson.github.io/post/1585721666/</guid>
      <description>面试题，不仅是面试指南，更是自我知识检测手段 1.Kafka 的设计时什么样的呢？ Kafka 将消息以 topic 为单位进行归纳 将向 Kafka topic 发布消息的程序成为 producers. 将预订 topics 并消费消息的</description>
    </item>
    
    <item>
      <title>Kafka面试自测系列3</title>
      <link>https://hollson.github.io/post/1585721669/</link>
      <pubDate>Wed, 08 May 2019 00:00:00 +0800</pubDate>
      
      <guid>https://hollson.github.io/post/1585721669/</guid>
      <description>面试题，不仅是面试指南，更是自我知识检测手段 问题1：什么是Apache Kafka? 答：Apache Kafka是一个发布 - 订阅开源消息代理应用程序。这个</description>
    </item>
    
    <item>
      <title>Nginx自测 - 课后练习题</title>
      <link>https://hollson.github.io/post/1585725105/</link>
      <pubDate>Wed, 08 May 2019 00:00:00 +0800</pubDate>
      
      <guid>https://hollson.github.io/post/1585725105/</guid>
      <description>1、什么是Nginx? Nginx是一款开源的、高性能的HTTP服务器、反向代理服务器和邮件代理服务器,具有负载均衡器和HTTP缓存的能力。 N</description>
    </item>
    
    <item>
      <title>Nginx面试自测系列3</title>
      <link>https://hollson.github.io/post/1585725111/</link>
      <pubDate>Wed, 08 May 2019 00:00:00 +0800</pubDate>
      
      <guid>https://hollson.github.io/post/1585725111/</guid>
      <description>Nginx有哪些功能 http代理和反向代理、负载均衡、web缓存。 1、负载均衡主要有轮询、加权轮询和IP Hash三种策略，扩展策略主要是通过</description>
    </item>
    
    <item>
      <title>Go精编100道题</title>
      <link>https://hollson.github.io/post/1585726239/</link>
      <pubDate>Tue, 09 Apr 2019 00:00:00 +0800</pubDate>
      
      <guid>https://hollson.github.io/post/1585726239/</guid>
      <description>Golang精编100题 能力模型 级别 模型 初级 primary 熟悉基本语法，能够看懂代码的意图； 在他人指导下能够完成用户故事的开发，编写的代码符合Clean</description>
    </item>
    
    <item>
      <title>Go面试自测系列</title>
      <link>https://hollson.github.io/post/1585725972/</link>
      <pubDate>Tue, 09 Apr 2019 00:00:00 +0800</pubDate>
      
      <guid>https://hollson.github.io/post/1585725972/</guid>
      <description>2、struct能不能比较 因为是强类型语言，所以不同类型的结构不能作比较，但是同一类型的实例值是可以比较的，实例不可以比较，因为是指针类型 4</description>
    </item>
    
    <item>
      <title>面试题汇总</title>
      <link>https://hollson.github.io/posts/99a7e89b9b8052e68f39909ef7fc0fc1/</link>
      <pubDate>Sat, 11 Aug 2018 00:13:00 +0800</pubDate>
      
      <guid>https://hollson.github.io/posts/99a7e89b9b8052e68f39909ef7fc0fc1/</guid>
      <description>[TOC] 1. Golang中除了加Mutex锁以外还有哪些方式安全读写共享变量？ Golang中Goroutine 可以通过 Channel 进行安全读写共享变量。 2. 无缓</description>
    </item>
    
  </channel>
</rss>
