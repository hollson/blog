<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>源码 on 码夫庄园</title>
    <link>https://hollson.github.io/tags/%E6%BA%90%E7%A0%81/</link>
    <description>Recent content in 源码 on 码夫庄园</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>版权所有</copyright>
    <lastBuildDate>Sun, 05 Apr 2020 00:00:00 +0800</lastBuildDate>
    
        <atom:link href="https://hollson.github.io/tags/%E6%BA%90%E7%A0%81/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>深入解读unsafe包</title>
      <link>https://hollson.github.io/post/1586082803/</link>
      <pubDate>Sun, 05 Apr 2020 00:00:00 +0800</pubDate>
      
      <guid>https://hollson.github.io/post/1586082803/</guid>
      <description>一. 关于 unsafe 包 Unsafe 包主要用于指针计算和指针类型转换(具体可以查阅unsafe 源码或unsafe 文档）。unsafe 包源码如下： 1 2 3 4 5 6 7 8 9</description>
    </item>
    
    <item>
      <title>深度解密Go语言之map</title>
      <link>https://hollson.github.io/post/1585573653/</link>
      <pubDate>Mon, 30 Mar 2020 00:00:00 +0800</pubDate>
      
      <guid>https://hollson.github.io/post/1585573653/</guid>
      <description>前言 Hash table 是计算机数据结构中一个最重要的设计。大部分hash table都实现了快速查找、添加、删除的功能，Go 语言内置的 map 实现了上述所有功能。</description>
    </item>
    
    <item>
      <title>深度解密Go语言之slice</title>
      <link>https://hollson.github.io/post/1585577658/</link>
      <pubDate>Mon, 30 Mar 2020 00:00:00 +0800</pubDate>
      
      <guid>https://hollson.github.io/post/1585577658/</guid>
      <description>源码 1 open -a goland $GOROOT/src/runtime/slice.go 源码简读 原型 1 2 3 4 5 type slice struct { array unsafe.Pointer len int cap int } make操作 经常被问到new和make读区别，来看一看到底干来啥 1 2 3 4 5 6 7 8 9</description>
    </item>
    
  </channel>
</rss>
